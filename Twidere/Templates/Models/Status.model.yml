imports:
  - Foundation
submodels:
  Status:
    fields:
      _id:
        type: Int64
        column: _id
        primary_key: autoincrement
      accountKey:
        type: UserKey
        column: account_key
        json_field: account_key
        json_transform: UserKeyTransform
        json_null: force
      sortId:
        type: Int64
        column: sort_id
        json_field: sort_id
      positionKey:
        type: Int64
        column: position_key
        json_field: position_key
      isGap:
        type: Bool
        column: is_gap
        json_field: is_gap
      createdAt:
        type: Date
        column: created_at
        json_field: created_at
      id:
        type: String
        column: status_id
        json_field: status_id
      userKey:
        type: UserKey
        column: user_key
        json_field: user_key
        json_transform: UserKeyTransform
      userName:
        type: String
        column: user_name
        json_field: user_name
      userScreenName:
        type: String
        column: user_screen_name
        json_field: user_screen_name
      userProfileImage:
        type: String
        column: user_profile_image
        json_field: user_profile_image
      textPlain:
        type: String
        column: text_plain
        json_field: text_plain
      textDisplay:
        type: String
        column: text_display
        json_field: text_display
      metadata:
        type: Status.Metadata?
        column: metadata
        json_field: metadata
      quotedId:
        type: String?
        column: quoted_status_id
        json_field: quoted_status_id
      quotedCreatedAt: # Added in database version 3
        type: Date?
        column: quoted_created_at
        json_field: quoted_created_at
        added_in: 3
      quotedUserKey:
        type: UserKey?
        column: quoted_user_key
        json_field: quoted_user_key
        json_transform: UserKeyTransform
      quotedUserName:
        type: String?
        column: quoted_user_name
        json_field: quoted_user_name
      quotedUserScreenName:
        type: String?
        column: quoted_user_screen_name
        json_field: quoted_user_screen_name
      quotedUserProfileImage:
        type: String?
        column: quoted_user_profile_image
        json_field: quoted_user_profile_image
      quotedTextPlain:
        type: String?
        column: quoted_text_plain
        json_field: quoted_text_plain
      quotedTextDisplay:
        type: String?
        column: quoted_text_display
        json_field: quoted_text_display
      quotedMetadata:
        type: Status.Metadata?
        column: quoted_metadata
        json_field: quoted_metadata
      retweetedByUserKey:
        type: UserKey?
        column: retweeted_by_user_key
        json_field: retweeted_by_user_key
        json_transform: UserKeyTransform
      retweetedByUserName:
        type: String?
        column: retweeted_by_user_name
        json_field: retweeted_by_user_name
      retweetedByUserScreenName:
        type: String?
        column: retweeted_by_user_screen_name
        json_field: retweeted_by_user_screen_name
      retweetedByUserProfileImage:
        type: String?
        column: retweeted_by_user_profile_image
        json_field: retweeted_by_user_profile_image
      retweetId:
        type: String?
        column: retweet_id
        json_field: retweet_id
      retweetCreatedAt: # Added in database version 3
        type: Date?
        column: retweet_created_at
        json_field: retweet_created_at
        added_in: 3
    submodels:
      Metadata:
        fields:
          links:
            type: '[LinkSpanItem]?'
            json_field: 'links'
          mentions:
            type: '[MentionSpanItem]?'
            json_field: 'mentions'
          hashtags:
            type: '[HashtagSpanItem]?'
            json_field: 'hashtags'
          media:
            type: '[MediaItem]?'
            json_field: 'media'
          displayRange:
            type: '[Int]?'
            json_field: 'display_range'
          inReplyTo:
            type: 'Status.Metadata.InReplyTo?'
            json_field: 'in_reply_to'
          externalUrl:
            type: String
            json_field: 'extenral_url'
          replyCount:
            type: Int64
            json_field: 'reply_count'
          retweetCount:
            type: Int64
            json_field: 'retweet_count'
          favoriteCount:
            type: Int64
            json_field: 'favorite_count'
        submodels:
          InReplyTo:
            fields:
              statusId:
                type: String
                json_field: 'status_id'
              userKey:
                type: UserKey
                json_field: 'user_key'
              userName:
                type: String?
                json_field: 'user_name'
              userScreenName:
                type: String
                json_field: 'user_screen_name'
