enum MediaItemType: byte {
  Unknown = 0, Image = 1, Video = 2, AnimatedGif = 3, ExternalPlayer = 4, VariableType = 5
}

table Status {
 _id:long;
 accountKey:UserKey;
 sortId:long;
 positionKey:long;
 isGap:bool;
 createdAt:long;
 id:string;
 userKey:UserKey;
 userName:string;
 userScreenName:string;
 userProfileImage:string;
 textPlain:string;
 textDisplay:string;
 metadata:StatusMetadata;
 quotedId:string;
 quotedUserKey:UserKey;
 quotedUserName:string;
 quotedUserScreenName:string;
 quotedUserProfileImage:string;
 quotedTextPlain:string;
 quotedTextDisplay:string;
 quotedMetadata:StatusMetadata;
 retweetedByUserKey:UserKey;
 retweetedByUserName:string;
 retweetedByUserScreenName:string;
 retweetedByUserProfileImage:string;
 retweetId:string;
}

table StatusMetadata {
  displayRange:DisplayRange;
  links:[LinkSpanItem];
  mentions:[MentionSpanItem];
  hashtags:[HashtagSpanItem];
  media:[MediaItem];
}

struct DisplayRange {
  start:int;
  end:int;
}

table LinkSpanItem {
  start:int;
  end:int;
  origStart:int;
  origEnd:int;

  display:string;
  link:string;
}

table MentionSpanItem {
  start:int;
  end:int;
  origStart:int;
  origEnd:int;

  key:UserKey;
  name:string;
  screenName:string;
}

table HashtagSpanItem {
  start:int;
  end:int;
  origStart:int;
  origEnd:int;

  hashtag:string;
}

table MediaItem {
  url:string;
  mediaUrl:string;
  previewUrl:string;
  type:MediaItemType;
  width:int = 0;
  height:int = 0;
  videoInfo:VideoMediaItemInfo;
  pageUrl:string;
  openBrowser:bool = false;
  altText:string;
}

table VideoMediaItemInfo {
  duration:long = -1;
  variants:[VideoMediaVariant];
}

table VideoMediaVariant {
  bitrate: long = -1;
  url: string;
  contentType: string;
}

table UserKey {
  id:string;
  host:string;
}

root_type Status;
